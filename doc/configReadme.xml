<?xml version="1.0"?>
<configuration>
	<placeholders>
		<placeholder id="template_name">Salesforce to Salesforce Account Migration</placeholder>
	</placeholders>
	<sections>
		<section id="use_case">
As a Salesforce admin I want to synchronize accounts between two Salesforce orgs.

This Template should serve as a foundation for the process of migrating accounts from one Salesforce instance to another, being able to specify the filtering criteria and desired behavior when an account already exists in the destination org. 

As implemented, this Template leverages the [Batch Module](http://www.mulesoft.org/documentation/display/current/Batch+Processing).
The batch job is divided in *Process* and On *Complete* stages.

Migration process starts from fetching all the existing Accounts that match the filter criteria from Salesforce Org A.
On *Process* stage matched accounts will be grouped and inserted or updated in Salesforce Org B.

Finally during the *On Complete* stage the Template will both output statistics data into the console and send a notification email with the results of the batch execution.		

The template is covered by the integration tests using the [MUnit](https://docs.mulesoft.com/munit). To be able to run the tests, see the example configuration of the test property file. 
</section>
		<section id="considerations">
<![CDATA[
To make this Anypoint Template run, there are certain preconditions that must be considered. All of them deal with the preparations in both, that must be made in order for all to run smoothly. **Failling to do so could lead to unexpected behavior of the template.**
]]>
		</section>
		<section id="running_on_cloudhub">
<![CDATA[

Once your app is all set and started, supposing you choose as domain name `sfdcaccountmigration` to trigger the use case you just need to hit `http://sfdcaccountmigration.cloudhub.io/migrateaccounts` and report will be sent to the emails configured.
]]>
		</section>
		<section id="application_configuration">
		<![CDATA[
**HTTP Connector configuration**
+ http.port `9090` 

**Batch Aggregator configuration**
+ page.size `1000`

**Salesforce Connector configuration for company A**
+ sfdc.a.username `bob.dylan@orga`
+ sfdc.a.password `DylanPassword123`
+ sfdc.a.securityToken `avsfwCUl7apQs56Xq2AKi3X`

**Salesforce Connector configuration for company B**
+ sfdc.b.username `joan.baez@orgb`
+ sfdc.b.password `JoanBaez456`
+ sfdc.b.securityToken `ces56arl7apQs56XTddf34X`

**SMTP Services configuration**
+ smtp.host `smtp.gmail.com`
+ smtp.port `587`
+ smtp.user `gmailuser`
+ smtp.password `gmailpassword`

**Email details**
+ mail.from `your.email@gmail.com`
+ mail.to `your.email@gmail.com`
+ mail.subject `Mail subject`
]]>
		</section>
		<section id="api_calls">
		<![CDATA[
Salesforce imposes limits on the number of API Calls that can be made. Therefore calculating this amount may be an important factor to consider. Account Broadcast Template calls to the API can be calculated using the formula:

***1 + X + X / {page.size}***

Being ***X*** the number of Accounts to be synchronized on each run. 

The division by ***{page.size}*** is because, by default, Accounts are gathered in groups of {page.size} for each Upsert API Call in the commit step.	

For instance if 10 records are fetched from origin instance, then 12 api calls will be made (1 + 10 + 1).
]]>
		</section>
		<section id="default_endpoints_xml">
		<![CDATA[
This is the file where you will found the inbound and outbound sides of your integration app.
This Template has only an [HTTP Inbound Endpoint](http://www.mulesoft.org/documentation/display/current/HTTP+Endpoint+Reference) as the way to trigger the use case.

###  Inbound Flow
**HTTP Inbound Endpoint** - Start Report Generation
+ `${http.port}` is set as a property to be defined either on a property file or in CloudHub environment variables.
+ The path configured by default is `migrateaccounts` and you are free to change for the one you prefer.
+ The host name for all endpoints in your CloudHub configuration should be defined as `localhost`. CloudHub will then route requests from your application domain URL to the endpoint.
+ The endpoint is configured as a *request-response* since as a result of calling it the response will be the total of Accounts synced and filtered by the criteria specified.
]]>
		</section>
		<section id="default_business_logic_xml">
		<![CDATA[
Functional aspect of the Template is implemented on this XML, directed by one flow responsible of excecuting the logic.
For the pourpose of this particular Template the *mainFlow* just excecutes a [Batch Job](http://www.mulesoft.org/documentation/display/current/Batch+Processing), which handles all the logic of it.
This flow has Exception Handling that basically consists on invoking the *errorHandlingFlow* defined in *errorHandling.xml* file.
]]>
		</section>
	</sections>
</configuration>